{"version":3,"sources":["Components/InitForm.js","utils.js","Components/MyImgs.js","Components/InitForm2.js","Components/PointsManager.js","Components/MyModal.js","Components/MyModal2.js","Components/GameHelps.js","Components/MyTournament.js","App.js","index.js"],"names":["InitForm","readFile","setLoad","setTournamentName","setNumGioc","setTipo","setInitForm","setInitForm2","setAudio","useState","window","localStorage","getItem","prev","fileError","setFileError","cordovaLoad","setCordovaLoad","loadFile","useRef","loadFileName","useEffect","parse","JSON","tournamentName","setItem","stringify","className","onSubmit","e","preventDefault","target","value","parseInt","numGioc","tipo","htmlFor","name","type","placeholder","required","id","defaultValue","disabled","hidden","ref","input","onChange","fr","FileReader","onload","result","error","readAsText","files","accept","cordova","onClick","alert","click","Player","favoriteTrack","battlePoints","trackPoints","this","btPoints","tkPoints","getRandomInt","min","max","Math","ceil","floor","random","MyImgs","favoriteTracksImgs","forEach","picture","Image","src","fileName","map","i","key","alt","InitForm2","tracks","setPlayers","Array","fill","favoriteTracks","setFavoriteTracks","tempPlayers","tempFavs","pl","nickName","split","length","substr","plus","toUpperCase","charAt","index","changeFavorite","tr","some","fvTr","fvInd","Fragment","idTrack","PointsManager","end","players","currentGameId","setCurrentGameId","myTournament","setMyTournament","endGame","setEndGame","openModalTempoPoints","tempWinners","tempPts","Number","POSITIVE_INFINITY","plTot","getTotalPoints","push","winners","w","util","el","temp","state","points","addBattlePoints","addTrackPoints","reset","MyModal","clicksModal","text","title","divModale","document","getElementById","opened","setOpened","createPortal","MyModal2","clicksModal2","pointsChangeId","closeModal","prevPoints","newPoints","slice","console","log","GameHelps","saveToLocalStorage","arrayRiavviaSwitch","setArrayRiavviaSwitch","names","switchTracks","setSwitchTracks","textModal","setTextModal","setClicksModal","tipoBig","tipoMedium","tipoSmall","arrayNumGioc","riavvia","switch","nriavvia","decrementRiavvia","icon","faRedoAlt","superRiavvia","faSyncAlt","nswitch","tempSw","intTrack","choice","splice","tempTourn","num","decrementSwitch","faExchangeAlt","transformSwitch","faAngleDoubleLeft","MyTournament","writeFile","goToHome","load","battles","setPointsChangeId","numPref","setClicksModal2","playlistRef","current","topPos","getElementsByClassName","offsetTop","scrollTop","loaded","tempBattles","shift","tempTracks","randomPref","player","array","j","shuffle","addBattle","intBattle","addTrack","addPref","pref","pop","scope","faHistory","p","indp","modificaPunteggi","faPencilAlt","txt","blob","Blob","saveAs","App","initForm","initForm2","audio","smoothscroll","polyfill","autoPlay","loop","prevAudio","nitroFueled","onBackKeyDown","confirm","navigator","app","exitApp","nomeFile","setRet","TEMPORARY","errorCallback","requestFileSystem","fs","root","getFile","fileEntry","file","reader","onloadend","code","create","createWriter","fileWriter","onwriteend","onerror","toString","write","renderReactDom","ReactDOM","render","addEventListener"],"mappings":"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","file":"static/js/main.06b70e07.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nexport default function InitForm({ readFile, setLoad, setTournamentName, setNumGioc, setTipo, setInitForm, setInitForm2, setAudio }) {\r\n    const [prev, setPrev] = useState((window.localStorage.getItem(\"nitrofueledtournament\")) !== null);\r\n    const [fileError, setFileError] = useState(false);\r\n    const [cordovaLoad, setCordovaLoad] = useState(null);\r\n\r\n    let loadFile = useRef(null);\r\n    let loadFileName = useRef(null);\r\n\r\n    const inizializzaTorneo = (e) => {\r\n        e.preventDefault();\r\n        setTournamentName(e.target.tournamentName.value);\r\n        setNumGioc(parseInt(e.target.numGioc.value));\r\n        setTipo(e.target.tipo.value);\r\n        /*window.localStorage.setItem( \"nitrofueledtournament\",\r\n        JSON.stringify({\r\n            tournamentName : e.target.tournamentName.value,\r\n            tipo : e.target.tipo.value,\r\n            numgioc : parseInt(e.target.numGioc.value)\r\n        }));*/\r\n        setInitForm(false);\r\n        return;\r\n    }\r\n\r\n    const loadStorage = () => {\r\n        setLoad(true);\r\n        setAudio(false);\r\n        setInitForm2(false);\r\n        setInitForm(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(cordovaLoad){\r\n            if (cordovaLoad !== \"ERRORE\") {\r\n                let parse = JSON.parse(cordovaLoad);\r\n                if (parse.tournamentName) {\r\n                    setFileError(false);\r\n                    window.localStorage.setItem(\"nitrofueledtournament\", JSON.stringify(parse));\r\n                    setLoad(true);\r\n                    setAudio(false);\r\n                    setInitForm2(false);\r\n                    setInitForm(false);\r\n                } else setFileError(true);\r\n            } else setFileError(true);\r\n        }\r\n    }, [cordovaLoad]);\r\n\r\n    const scegliFileTorneo = () => {\r\n        if (window.cordova) {\r\n            if (loadFileName.value !== '') {\r\n                readFile(loadFileName.value, setCordovaLoad);\r\n            } else {\r\n                alert(\"Inserire il nome torneo del torneo che si vuole caricare.\");\r\n            }\r\n        } else {\r\n            loadFile.click();\r\n        }\r\n    }\r\n\r\n    const caricaTorneoDaFile = (e) => {\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            try {\r\n                let parse = JSON.parse(fr.result);\r\n                if (parse.tournamentName) {\r\n                    setFileError(false);\r\n                    window.localStorage.setItem(\"nitrofueledtournament\", JSON.stringify(parse));\r\n                    setLoad(true);\r\n                    setAudio(false);\r\n                    setInitForm2(false);\r\n                    setInitForm(false);\r\n                    /*console.log(fr.result)*/\r\n                } else {\r\n                    setFileError(true);\r\n                }\r\n            } catch (error) {\r\n                setFileError(true);\r\n            }\r\n        }\r\n        fr.readAsText(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row m-0 justify-content-center align-items-center h-75\">\r\n                <div className=\"col-12 col-md-4 p-0\">\r\n                    <form onSubmit={inizializzaTorneo}>\r\n                        <div className=\"form-row text-center\">\r\n                            <div className=\"form-group col-12\">\r\n                                <div>\r\n                                    {fileError && <label className=\"my-label-error mb-4\">File selezionato non corretto!</label>}\r\n                                </div>\r\n                                <div>\r\n                                    <label className=\"my-label\" htmlFor=\"inputState1\">Torneo:</label>\r\n                                    <input name=\"tournamentName\" className=\"form-control form-control-sm mb-1\" type=\"text\" placeholder=\"Inserisci un nome per il torneo\" required></input>\r\n                                </div>\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"my-label\" htmlFor=\"inputState1\">Tipologia torneo:</label>\r\n                                    <select name=\"tipo\" id=\"inputState1\" className=\"form-control form-control-sm text-center\" defaultValue=\"\" required>\r\n                                        <option disabled hidden value=\"\">Scegli il tipo di torneo</option>\r\n                                        <option value=\"small\">Small</option>\r\n                                        <option value=\"medium\">Medium</option>\r\n                                        <option value=\"big\">Big</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"my-label\" htmlFor=\"inputState2\">Numero giocatori:</label>\r\n                                    <select name=\"numGioc\" id=\"inputState2\" className=\"form-control form-control-sm text-center\" defaultValue=\"\" required>\r\n                                        <option disabled hidden value=\"\">Scegli il numero di giocatori</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input className=\"btn btn-secondary mt-2\" type=\"submit\" value=\"Nuovo torneo\" />\r\n                                <input ref={input => loadFile = input} onChange={caricaTorneoDaFile} className=\"btn btn-secondary mt-2 ml-2 d-none\" type=\"file\" id=\"carica-torneo\" accept=\".txt\"></input>\r\n                                {window.cordova && <input ref={input => loadFileName = input} name=\"loadFileName\" className=\"form-control form-control-sm mb-2 mt-4\" type=\"text\" placeholder=\"Inserisci il nome del torneo da caricare\"></input>}\r\n                                <input onClick={scegliFileTorneo} className=\"btn btn-secondary mt-2\" type=\"button\" value=\"Carica torneo\" />\r\n                                {prev && <input onClick={loadStorage} className=\"btn btn-secondary mt-2 ml-2\" type=\"button\" value=\"Torna all'ultimo torneo\" />}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","export class Player {\r\n    constructor(name, favoriteTrack, battlePoints, trackPoints) {\r\n        this.name = name;\r\n        this.favoriteTrack = favoriteTrack; //{id:...,name:...}\r\n        this.battlePoints = battlePoints;\r\n        this.trackPoints = trackPoints;\r\n    }\r\n    addBattlePoints(btPoints) {\r\n        this.battlePoints += btPoints;\r\n    }\r\n    addTrackPoints(tkPoints) {\r\n        this.trackPoints += tkPoints;\r\n    }\r\n    getTotalPoints() {\r\n        return this.battlePoints + this.trackPoints;\r\n    }\r\n}\r\nexport function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //Il max è escluso e il min è incluso\r\n}\r\n\r\nexport function shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n}\r\n\r\nexport function getWinner(players){\r\n    let tempWinners = [];\r\n    let tempPts = Number.POSITIVE_INFINITY;\r\n    players.forEach(pl => {\r\n        let plTot = pl.getTotalPoints();\r\n        if (plTot < tempPts) {\r\n            tempPts = pl.getTotalPoints();\r\n            tempWinners = [pl.name];\r\n        } else if (plTot === tempPts) {\r\n            tempWinners.push(pl.name);\r\n        }\r\n    });\r\n    if (tempWinners.length > 1) {\r\n        let winners = \"\";\r\n        tempWinners.forEach(w => winners += (w + \" \"));\r\n        return \"Torneo concluso in parità, i vincitori sono: ;\" + winners;\r\n    } else {\r\n        return \"Vince il torneo: ;\" + tempWinners[0];\r\n    }\r\n};\r\nexport function getBtWinner(players){\r\n    let tempWinners = [];\r\n    let tempPts = Number.POSITIVE_INFINITY;\r\n    players.forEach(pl => {\r\n        let plTot = pl.battlePoints;\r\n        if (plTot < tempPts) {\r\n            tempPts = pl.battlePoints;\r\n            tempWinners = [pl.name];\r\n        } else if (plTot === tempPts) {\r\n            tempWinners.push(pl.name);\r\n        }\r\n    });\r\n    if (tempWinners.length > 1) {\r\n        let winners = \"\";\r\n        tempWinners.forEach(w => winners += (w + \" \"));\r\n        return \"Premio battaglia in parità, i vincitori sono: ;\" + winners;\r\n    } else {\r\n        return \"Vince il premio battaglia: ;\" + tempWinners[0];\r\n    }\r\n};\r\nexport function getTrWinner(players){\r\n    let tempWinners = [];\r\n    let tempPts = Number.POSITIVE_INFINITY;\r\n    players.forEach(pl => {\r\n        let plTot = pl.trackPoints;\r\n        if (plTot < tempPts) {\r\n            tempPts = pl.trackPoints;\r\n            tempWinners = [pl.name];\r\n        } else if (plTot === tempPts) {\r\n            tempWinners.push(pl.name);\r\n        }\r\n    });\r\n    if (tempWinners.length > 1) {\r\n        let winners = \"\";\r\n        tempWinners.forEach(w => winners += (w + \" \"));\r\n        return \"Premio gara in parità, i vincitori sono: ;\" + winners;\r\n    } else {\r\n        return \"Vince il premio gara: ;\" + tempWinners[0];\r\n    }\r\n};","import React, { useEffect } from 'react';\r\n\r\nexport default function MyImgs({ favoriteTracksImgs }) {\r\n    useEffect(() => {\r\n        favoriteTracksImgs.forEach((picture) => {\r\n            const img = new Image();\r\n            img.src = picture.fileName;\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"preftracks mb-2 shadow\">\r\n            <div className=\"row m-0 justify-content-center\">\r\n                {favoriteTracksImgs.map((src, i) => {\r\n                    return (\r\n                        <div key={i} className=\"col-6 w-100 h-100 p-2\">\r\n                            <img className={\"img-fluid trackimg \"+((i===0)?'b-blue':((i===1)?'b-red':((i===2)?'b-green':'b-purple')))} src={src} alt={\"Logo pista preferita del giocatore \"+(i+1)}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Player } from '../utils';\r\nimport MyImgs from './MyImgs';\r\n\r\nexport default function InitForm2({ tracks, numGioc, setPlayers, setInitForm2 }) {\r\n    const [favoriteTracks, setFavoriteTracks] = useState(Array(numGioc).fill(0));\r\n    const setNomiPref = (e) => {\r\n        e.preventDefault();\r\n        const tempPlayers = Array(numGioc).fill(null);\r\n        const tempFavs = Array(numGioc).fill(null);\r\n        tempPlayers.forEach((pl, i) => {\r\n            const nickName = (e.target[i * 2].value).split(' ');\r\n            const name = (nickName[0].length > 10) ? nickName[0].substr(0, 8) : nickName[0];\r\n            const plus = (nickName[1]) ? nickName[1].toUpperCase().charAt(0) : '';\r\n            tempPlayers[i] = new Player(name + plus, tracks[e.target[(i * 2) + 1].value], 0, 0, 0);\r\n        });\r\n        setPlayers(tempPlayers);\r\n        setFavoriteTracks(tempFavs);\r\n        setInitForm2(false);\r\n    }\r\n\r\n    const changeFavorite = (e, index) => {\r\n        favoriteTracks[index] = parseInt(e.target.value);\r\n        setFavoriteTracks([...favoriteTracks]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row m-0 justify-content-center align-items-center h-75\">\r\n            <div className=\"col-12 col-md-4 p-0\">\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-12 p-0\">\r\n                        <form onSubmit={setNomiPref}>\r\n                            <div className=\"form-row text-center justify-content-center\">\r\n                                {Array(numGioc).fill(null).map((pl, i) => {\r\n                                    return (\r\n                                        <div key={\"newpl-\"+i} className=\"form-group col-6\">\r\n                                            <div key={\"input-\" + (i + 1)} className=\"mt-2\">\r\n                                                <input className=\"form-control form-control-sm mb-1\" type=\"text\" placeholder={\"Nome giocatore \" + (i + 1)} required></input>\r\n                                                <select name={\"inputStatePlayer-\" + (i + 1)} id={\"inputStatePlayer-\" + (i + 1)}\r\n                                                    onChange={(e) => changeFavorite(e, i)} className=\"form-control form-control-sm text-center\"\r\n                                                    defaultValue=\"\" required>\r\n                                                    <option disabled hidden value=\"\">{\"Gara preferita del giocatore \" + (i + 1)}</option>\r\n                                                    {tracks.map(tr => {\r\n                                                        if (tr.id === 0 || favoriteTracks.some((fvTr, fvInd) => (tr.id === fvTr && fvInd !== i))) return <React.Fragment key={\"j-\" + tr.id}></React.Fragment>;\r\n                                                        else return (<option key={\"j-\" + tr.id} value={tr.id}>{tr.id}. {tr.name}</option>)\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>)\r\n                                })}\r\n                                <input className=\"btn btn-secondary mt-1\" type=\"submit\" value=\"Avanti\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-12 mt-4 p-0\">\r\n                        <MyImgs favoriteTracksImgs={favoriteTracks.map(idTrack => tracks[idTrack].src)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport * as util from '../utils.js';\r\n\r\nexport default function PointsManager({end, players, setPlayers, currentGameId, setCurrentGameId, myTournament, setMyTournament, endGame, setEndGame, openModalTempoPoints }) {\r\n    const inserisciPunti = (e) => {\r\n        e.preventDefault();\r\n        let tempPlayers = [...players];\r\n        let temp = myTournament.map((pl, i) => {\r\n            return (parseInt(pl.index) === (parseInt(currentGameId) + 1)) ? { ...myTournament[currentGameId], state: \"complete\", points: tempPlayers.map((pl, i) => (parseInt(e.target[i].value))) } : pl\r\n        });\r\n        setMyTournament(temp);\r\n\r\n        tempPlayers.forEach((pl, i) => {\r\n            if (myTournament[currentGameId].type === 'battle') {\r\n                pl.addBattlePoints(parseInt(e.target[i].value));\r\n            } else {\r\n                pl.addTrackPoints(parseInt(e.target[i].value));\r\n            }\r\n        });\r\n\r\n        setPlayers(tempPlayers);\r\n        if (currentGameId === (end - 1)) {\r\n            setEndGame(true);\r\n        }\r\n        setCurrentGameId(currentGameId + 1);\r\n        e.target.reset();\r\n    }\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-12\">\r\n                {!endGame ? (\r\n                    <>\r\n                        <form onSubmit={inserisciPunti}>\r\n                            <div className=\"form-row text-center\">\r\n                                {\r\n                                    players.map((pl, i) => {\r\n                                        return (\r\n                                            <div key={pl.name} className=\"form-group col-6 mb-0\">\r\n                                                <div key={\"pt-pl-\" + i}>\r\n                                                    <label htmlFor={\"pt-pl-\" + i} className=\"player\">{pl.name}:</label>\r\n                                                    <select name=\"tipo\" id={\"pt-pl-\" + i} className=\"form-control text-center\" defaultValue=\"\" required>\r\n                                                        <option disabled hidden value=\"\">---Posizione---</option>\r\n                                                        {[1, 2, 3, 4, 5, 6, 7, 8].map((el, i) => <option key={\"opt-\" + i} value={el}>{el}&#x2090;</option>)}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>)\r\n                                    })\r\n                                }\r\n                                <div className=\"form-group col-12 w-75 mt-2\">\r\n                                    <input className={\"btn w-100\" + ((currentGameId === (end - 1)) ? \" btn-danger\" : \" btn-secondary\")} type=\"submit\" value={(currentGameId === (end - 1)) ? \"Concludi partita\" : \"Inserisci punti\"} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </>\r\n                ) : <>\r\n                        <div className=\"row align-items-center\">\r\n                            {\r\n                                util.getWinner(players).split(';').map((el, i) => <div className=\"col-12 col-md-6 mb-2\" key={'w' + i}><h4 className=\"my-color-black\">{el}</h4></div>)\r\n                            }\r\n                        </div>\r\n                        <div className=\"row align-items-center\">\r\n                            {\r\n                                util.getBtWinner(players).split(';').map((el, i) => <div className=\"col-12 col-md-6 mb-2\" key={'wb' + i}><h4 className=\"my-color-black\">{el}</h4></div>)\r\n                            }\r\n                        </div>\r\n                        <div className=\"row align-items-center\">\r\n                            {\r\n                                util.getTrWinner(players).split(';').map((el, i) => <div className=\"col-12 col-md-6 mb-2\" key={'wt' + i}><h4 className=\"my-color-black\">{el}</h4></div>)\r\n                            }\r\n                        </div>\r\n                    </>\r\n                }\r\n                <div className=\"\">\r\n                    <button onClick={openModalTempoPoints} className={\"btn w-100 mb-3\" + ((end === currentGameId) ? \" btn-success\" : \" btn-secondary\")}>{(end === currentGameId) ? \"Punteggi finali\" : \"Punteggi parziali\"}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport default function MyModal({clicksModal, text, title }) {\r\n    const divModale = document.getElementById('divModale');\r\n    const [opened, setOpened] = useState(false);\r\n    const closeModal = () => {\r\n        setOpened(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        clicksModal && setOpened(true);\r\n    }, [clicksModal]);\r\n\r\n    return createPortal(\r\n        <>\r\n            {opened && (\r\n                <div className=\"containermodale\">\r\n                    <div className=\"shadow modale\">\r\n                            <div className=\"row justify-content-between m-0 p-1\">\r\n                                <div className=\"h3 text-uppercase\">{title}</div>\r\n                                <button onClick={closeModal} className=\"btn btn-sm btn-danger rounded p-1 h-50\">X</button>\r\n                            </div>\r\n                            <hr className=\"separator m-0\"></hr>\r\n                            <div className=\"row modal-children w-100 m-0\">\r\n                                { text.split(';').map(i => <div key={'t'+i} className=\"col-12\"><span>{i}</span></div>) }\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            )}\r\n        </>, divModale\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport default function MyModal2({ clicksModal2, title, players, setPlayers, myTournament, setMyTournament, pointsChangeId}) {\r\n    const divModale = document.getElementById('divModale');\r\n    const [opened, setOpened] = useState(false);\r\n\r\n    const closeModal = () => {\r\n        setOpened(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        clicksModal2 && setOpened(true);\r\n    }, [clicksModal2]);\r\n\r\n    const cambiaPunti = (e) => {\r\n        e.preventDefault();\r\n        /*console.log(\"gameToChange\", myTournament[pointsChangeId]);*/\r\n        \r\n        /*console.log(\"myTournament before:\",myTournament);*/\r\n        let prevPoints = myTournament[pointsChangeId].points;\r\n        let newPoints = players.map((pl, i) => parseInt(e.target[i].value));\r\n        /*console.log(\"newPoints\",newPoints);*/\r\n        setMyTournament([\r\n            ...myTournament.slice(0, pointsChangeId),\r\n            {...myTournament[pointsChangeId], points: newPoints, state: \"complete\"},\r\n            ...myTournament.slice(pointsChangeId+1)\r\n        ]);\r\n        /*console.log(\"myTournament after:\",myTournament);*/\r\n        \r\n\r\n        let tempPlayers = [...players];\r\n        /*console.log(\"templPlayers before:\",tempPlayers);*/\r\n        tempPlayers.forEach((pl, i) => {\r\n            if (myTournament[pointsChangeId].type === 'battle') {\r\n                pl.battlePoints = (pl.battlePoints - prevPoints[i]) + newPoints[i];\r\n            }else if (myTournament[pointsChangeId].type === 'track' || myTournament[pointsChangeId].type === 'favorite') {\r\n                pl.trackPoints = (pl.trackPoints - prevPoints[i]) + newPoints[i];\r\n            }\r\n        })\r\n        setPlayers(tempPlayers);\r\n        /*console.log(\"templPlayers after:\",tempPlayers);*/\r\n        console.log(\"sono qui\");\r\n        closeModal();\r\n    }\r\n\r\n    return createPortal(\r\n        <>\r\n            {opened && (\r\n                <div className=\"containermodale\">\r\n                    <div className=\"shadow modale\">\r\n                        <div className=\"row justify-content-between m-0 p-1\">\r\n                            <div className=\"h3 text-uppercase\">{title}</div>\r\n                            <button onClick={closeModal} className=\"btn btn-sm btn-danger rounded p-1 h-50\">X</button>\r\n                        </div>\r\n                        <hr className=\"separator m-0\"></hr>\r\n                        <div className=\"form-row justify-content-center w-100 m-0\">\r\n                            <div className=\"h6 text-uppercase\">{`${myTournament[pointsChangeId].index}. ${myTournament[pointsChangeId].name} - ${((myTournament[pointsChangeId].type === 'battle') ? 'BATTAGLIA' : ((myTournament[pointsChangeId].type === 'favorite') ? 'PREFERITA' : 'GARA'))}`}</div>\r\n                            <div className=\"col-12\">\r\n                                <form onSubmit={cambiaPunti}>\r\n                                    <div className=\"form-group\">\r\n                                        {players.map((pl, i) => {\r\n                                            return (\r\n                                                <div key={\"modal2-pt-pl-\" + i}>\r\n                                                    <label className=\"mb-1\" htmlFor={\"modal2-pt-pl-\" + i}>{pl.name}:</label>\r\n                                                    <select name=\"tipo\" id={\"modal2-pt-pl-\" + i} className=\"form-control text-center mb-2\" defaultValue=\"\" required>\r\n                                                        <option disabled hidden value=\"\">---Posizione---</option>\r\n                                                        {[1, 2, 3, 4, 5, 6, 7, 8].map((el, i) => <option key={\"modal2-opt-\" + i} value={el}>{el}&#x2090;</option>)}\r\n                                                    </select>\r\n                                                </div>)\r\n                                        })}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input className=\"form-control btn btn-outline-primary mt-2\" type=\"submit\" value=\"Inserisci punti\" />\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>, divModale\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MyModal from './MyModal.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExchangeAlt, faAngleDoubleLeft, faRedoAlt, faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { getRandomInt } from '../utils';\r\n\r\nexport default function GameHelps({ saveToLocalStorage, arrayRiavviaSwitch, setArrayRiavviaSwitch, names, numGioc, tipo, myTournament, setMyTournament, switchTracks, setSwitchTracks, currentGameId }) {\r\n    const [textModal, setTextModal] = useState(\"\");\r\n    const [clicksModal, setClicksModal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        /*Scelta del numero di riavvia e switch per ogni tipo di torneo*/\r\n        const tipoBig = { 'riavvia': 2, 'switch': 2 };\r\n        const tipoMedium = { 'riavvia': 2, 'switch': 1 };\r\n        const tipoSmall = { 'riavvia': 1, 'switch': 1 };\r\n        const arrayNumGioc = [];\r\n        names.forEach(() => {\r\n            arrayNumGioc.push({\r\n                riavvia: ((tipo === 'small') ? tipoSmall.riavvia :\r\n                    ((tipo === 'medium') ? tipoMedium.riavvia : tipoBig.riavvia)),\r\n                switch: ((tipo === 'small') ? tipoSmall.switch :\r\n                    ((tipo === 'medium') ? tipoMedium.switch : tipoBig.switch))\r\n            })\r\n        });\r\n        setArrayRiavviaSwitch(arrayNumGioc);\r\n    }, []);\r\n\r\n    const decrementSwitch = (i, nswitch) => {\r\n        if (nswitch !== 0) {\r\n            //Switch solo se type è track\r\n            if (switchTracks.length > 0) {\r\n                if (myTournament[currentGameId].type === 'track') {\r\n                    const tempSw = [...switchTracks];\r\n                    let intTrack = getRandomInt(0, tempSw.length);\r\n                    let choice = tempSw[intTrack];\r\n                    tempSw.splice(intTrack, 1);\r\n                    setSwitchTracks(tempSw);\r\n\r\n                    const tempTourn = [...myTournament];\r\n                    tempTourn[currentGameId] =\r\n                        { index: (currentGameId + 1), num: choice.id, name: choice.name, type: 'track', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n                    setMyTournament(tempTourn);\r\n\r\n                    if (arrayRiavviaSwitch[i].switch > 0) {\r\n                        const temp = [...arrayRiavviaSwitch];\r\n                        temp[i].switch -= 1;\r\n                        setArrayRiavviaSwitch(temp);\r\n                    }\r\n                } else {\r\n                    setClicksModal((prev) => prev + 1);\r\n                    setTextModal(\"Non è possibile effettuare Switch su una battaglia o su una gara preferita.\");\r\n                    //alert(\"Non è possibile effettuare Switch su una battaglia o su una gara preferita.\")\r\n                }\r\n            } else {\r\n                //Per i tipi di torneo previsti finora questo non può accadere.\r\n                alert(\"Errore durante lo switch, non è possibile effettuare lo switch\");\r\n            }\r\n        }\r\n\r\n    }\r\n    const transformSwitch = (i, nswitch) => {\r\n        if (nswitch !== 0) {\r\n            if (arrayRiavviaSwitch[i].switch > 0) {\r\n                const temp = [...arrayRiavviaSwitch];\r\n                temp[i].switch -= 1;\r\n                temp[i].riavvia += 2;\r\n                setArrayRiavviaSwitch(temp);\r\n            }\r\n        }\r\n    }\r\n    const decrementRiavvia = (i, nriavvia) => {\r\n        if (nriavvia !== 0) {\r\n            if (myTournament[currentGameId].type === 'track' || myTournament[currentGameId].type === 'favorite') {\r\n                if (arrayRiavviaSwitch[i].riavvia > 0) {\r\n                    const temp = [...arrayRiavviaSwitch];\r\n                    temp[i].riavvia -= 1;\r\n                    setArrayRiavviaSwitch(temp);\r\n                }\r\n            } else {\r\n                setClicksModal((prev) => prev + 1);\r\n                setTextModal(\"Non è possibile effettuare Riavvia su una battaglia.\");\r\n                //alert(\"Non è possibile effettuare Riavvia su una battaglia.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const superRiavvia = (i, nriavvia) => {\r\n        if ((nriavvia - 2) >= 0) {\r\n            if (myTournament[currentGameId].type === 'track' || myTournament[currentGameId].type === 'favorite') {\r\n                if (arrayRiavviaSwitch[i].riavvia > 0) {\r\n                    const temp = [...arrayRiavviaSwitch];\r\n                    temp[i].riavvia -= 2;\r\n                    setArrayRiavviaSwitch(temp);\r\n                }\r\n            } else {\r\n                setClicksModal((prev) => prev + 1);\r\n                setTextModal(\"Non è possibile effettuare SuperRiavvia su una battaglia.\");\r\n                //alert(\"Non è possibile effettuare SuperRiavvia su una battaglia.\")\r\n            }\r\n        }\r\n\r\n    }\r\n    return (<>\r\n        <div className=\"row\">\r\n            {arrayRiavviaSwitch && arrayRiavviaSwitch.map((pl, i) => {\r\n                return (\r\n                    <div key={'gHelp-' + i} className=\"col-6 col-md-3\">\r\n                        <div key={'player-' + i} className=\"row\">\r\n                            <div className={\"col-12 h4 m-0 player\" + (i + 1) + \"-italic\"}>{names[i]}</div>\r\n\r\n                            <div className=\"col-12 col-xl-6 my-label-sm\">\r\n                                <div className=\"row align-items-center m-0\">\r\n                                    <div className=\"col-6 p-0\">\r\n                                        Riavvia: {pl.riavvia}\r\n                                    </div>\r\n                                    <div className=\"col-3 p-0\">\r\n                                        <span className=\"my-icon-medium\">\r\n                                            <FontAwesomeIcon\r\n                                                title=\"Riavvia\"\r\n                                                className={(pl.riavvia === 0) ? \"my-icon-disabled\" : \"my-icon\"}\r\n                                                onClick={() => decrementRiavvia(i, pl.riavvia)}\r\n                                                icon={faRedoAlt} />\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-3 p-0\">\r\n                                        <span className=\"my-icon-medium\">\r\n                                            <FontAwesomeIcon\r\n                                                title=\"SuperRiavvia\"\r\n                                                className={((pl.riavvia - 2) < 0) ? \" my-icon-disabled\" : \" my-icon\"}\r\n                                                onClick={() => superRiavvia(i, pl.riavvia)}\r\n                                                icon={faSyncAlt} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-xl-6 my-label-sm\">\r\n                                <div className=\"row align-items-center m-0\">\r\n                                    <div className=\"col-6 p-0\">\r\n                                        Switch: {pl.switch}\r\n                                    </div>\r\n                                    <div className=\"col-3 p-0\">\r\n                                        <span className=\"my-icon-medium\">\r\n                                            <FontAwesomeIcon\r\n                                                title=\"Switch\"\r\n                                                className={(pl.switch === 0) ? \"my-icon-disabled\" : \"my-icon\"}\r\n                                                onClick={() => decrementSwitch(i, pl.switch)}\r\n                                                icon={faExchangeAlt} />\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"col-3 p-0\">\r\n                                        <span className=\"my-icon-medium\">\r\n                                            <FontAwesomeIcon\r\n                                                title=\"1 Switch => 2 Riavvia\"\r\n                                                className={(pl.switch === 0) ? \" my-icon-disabled\" : \" my-icon\"}\r\n                                                onClick={() => transformSwitch(i, pl.switch)}\r\n                                                icon={faAngleDoubleLeft} />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n        <MyModal clicksModal={clicksModal} text={textModal} title=\"ATTENZIONE\"></MyModal>\r\n    </>)\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faHistory } from '@fortawesome/free-solid-svg-icons';\r\nimport PointsManager from './PointsManager';\r\nimport MyModal from './MyModal.js';\r\nimport MyModal2 from './MyModal2.js';\r\nimport GameHelps from './GameHelps';\r\nimport { getRandomInt, Player, shuffle } from '../utils';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport default function MyTournament({writeFile, goToHome, setAudio, setInitForm, setInitForm2, setTournamentName, setNumGioc, setTipo, setPlayers, tournamentName, load, tipo, numGioc, battles, tracks, players }) {\r\n    const [currentGameId, setCurrentGameId] = useState(0);\r\n    const [myTournament, setMyTournament] = useState(null);\r\n    const [switchTracks, setSwitchTracks] = useState([]);\r\n    const [pointsChangeId, setPointsChangeId] = useState(0);\r\n\r\n    const [arrayRiavviaSwitch, setArrayRiavviaSwitch] = useState(null);\r\n\r\n    const [endGame, setEndGame] = useState(false);\r\n\r\n    const numPref = numGioc;\r\n    const numBattles = (tipo === 'small') ? 2 : ((tipo === 'medium') ? 3 : 4);\r\n    const numTracks = (tipo === 'small') ? 3 : ((tipo === 'medium') ? 6 : 9);\r\n    const end = numPref + numBattles + numTracks;\r\n\r\n    const [clicksModal, setClicksModal] = useState(0);\r\n    const [clicksModal2, setClicksModal2] = useState(0);\r\n    const [textModal, setTextModal] = useState(\"\");\r\n\r\n    const saveInFile = () => {\r\n        let blob = new Blob([window.localStorage.getItem(\"nitrofueledtournament\")],\r\n            { type: \"text/plain;charset=utf-8\" });\r\n        if(window.cordova){\r\n            writeFile(blob, tournamentName);\r\n        }else{\r\n            saveAs(blob, tournamentName + \".txt\");\r\n        } \r\n    }\r\n\r\n    const saveToLocalStorage = () => {\r\n        window.localStorage.setItem(\"nitrofueledtournament\", JSON.stringify({\r\n            tournamentName: tournamentName,\r\n            numGioc: numGioc,\r\n            tipo: tipo,\r\n            players: players,\r\n            currentGameId: currentGameId,\r\n            myTournament: myTournament,\r\n            switchTracks: switchTracks,\r\n            pointsChangeId: pointsChangeId,\r\n            clicksModal: clicksModal,\r\n            clicksModal2: clicksModal2,\r\n            textModal: textModal,\r\n            arrayRiavviaSwitch: arrayRiavviaSwitch,\r\n            endGame: endGame\r\n        }));\r\n    }\r\n\r\n    const modificaPunteggi = (i) => {\r\n        setPointsChangeId(i);\r\n        setClicksModal2((prev) => prev + 1);\r\n    }\r\n\r\n    const openModalTempoPoints = () => {\r\n        let txt = \"\";\r\n        players.forEach(pl => {\r\n            txt += pl.name + \"= tot:\" + pl.getTotalPoints() + \" battaglie:\" + pl.battlePoints + \" gare:\" + pl.trackPoints + \";\";\r\n        });\r\n        setTextModal(txt);\r\n        setClicksModal((prev) => prev + 1);\r\n\r\n        /*\r\n        txt += util.getWinner(players) + \";\";\r\n            txt += util.getBtWinner(players) + \";\";\r\n            txt += util.getTrWinner(players) + \";\";\r\n        */\r\n    };\r\n\r\n    const playlistRef = useRef(null);\r\n    useEffect(() => {\r\n        if (playlistRef.current) {\r\n            let myElements = document.getElementsByClassName('prev-current');\r\n            let topPos = myElements[0].offsetTop;\r\n            playlistRef.current.scrollTop = topPos;\r\n        };\r\n        currentGameId && saveToLocalStorage();\r\n    }, [currentGameId])\r\n\r\n    useEffect(() => {\r\n        arrayRiavviaSwitch && saveToLocalStorage();\r\n    }, [arrayRiavviaSwitch])\r\n\r\n    useEffect(() => {\r\n        myTournament && saveToLocalStorage();\r\n    }, [myTournament])\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            let loaded = JSON.parse(window.localStorage.getItem(\"nitrofueledtournament\"));\r\n            console.log(\"loaded: \", loaded);\r\n            setTournamentName(loaded.tournamentName);\r\n            setNumGioc(loaded.numGioc);\r\n            setTipo(loaded.tipo);\r\n            setEndGame(loaded.endGame);\r\n\r\n            setPlayers(loaded.players.map(pl => new Player(pl.name, pl.favoriteTrack, pl.battlePoints, pl.trackPoints)));\r\n\r\n            setCurrentGameId(loaded.currentGameId);\r\n            setMyTournament(loaded.myTournament);\r\n            setSwitchTracks(loaded.switchTracks);\r\n            setPointsChangeId(loaded.pointsChangeId);\r\n\r\n            setClicksModal(0);\r\n            setClicksModal2(0);\r\n            setTextModal(\"\");\r\n\r\n            setArrayRiavviaSwitch(loaded.arrayRiavviaSwitch);\r\n\r\n            return;\r\n        }\r\n\r\n        let tempBattles = [...battles];\r\n        tempBattles.shift();\r\n        let tempTracks = [...tracks];\r\n        tempTracks.shift();\r\n        let randomPref = players.map(pl => { return { num: pl.favoriteTrack.id, name: pl.favoriteTrack.name, player: pl.name } });\r\n        shuffle(randomPref);\r\n\r\n        const addBattle = (battles, i) => {\r\n            let intBattle = getRandomInt(0, battles.length);\r\n            let choice = battles[intBattle];\r\n            battles.splice(intBattle, 1);\r\n            return { index: i + 1, num: choice.id, name: choice.name, type: 'battle', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n        }\r\n\r\n        const addTrack = (tracks, i) => {\r\n            let intTrack = getRandomInt(0, tracks.length);\r\n            let choice = tracks[intTrack];\r\n            tracks.splice(intTrack, 1);\r\n            return { index: i + 1, num: choice.id, name: choice.name, type: 'track', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n        }\r\n\r\n        const addPref = (randomPref, i) => {\r\n            const pref = randomPref.pop();\r\n            return { index: i + 1, num: pref.num, name: pref.name + \" [\" + pref.player + \"]\", type: 'favorite', state: 'uncomplete', points: Array(numGioc).fill(null) };\r\n        }\r\n\r\n        setMyTournament(Array(end).fill(null).map((el, i) => {\r\n            if (tipo === 'small') {\r\n                if (i === 0) {\r\n                    return addBattle(tempBattles, i);\r\n                } else if (i > 0 && i <= 3) {\r\n                    return addTrack(tempTracks, i);\r\n                } else if (i > 3 && i <= 3 + numPref) {\r\n                    return addPref(randomPref, i);\r\n                } else {\r\n                    setSwitchTracks(tempTracks);\r\n                    return addBattle(tempBattles, i);\r\n                }\r\n            } else if (tipo === 'medium') {\r\n                if (i === 0) {\r\n                    return addBattle(tempBattles, i);\r\n                } else if (i > 0 && i <= 3) {\r\n                    return addTrack(tempTracks, i);\r\n                } else if (numPref === 2 || numPref === 3) {\r\n                    if (i === 4) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 5) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 5 && i <= 8) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i > 8 && i <= (8 + (numPref - 1))) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                } else if (numGioc === 4) {\r\n                    if (i > 3 && i <= 5) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 6) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 6 && i <= 9) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i > 9 && i <= (9 + (numPref - 2))) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                }\r\n            } else {\r\n                //tipo big\r\n                if (i === 0) {\r\n                    return addBattle(tempBattles, i);\r\n                } else if (i > 0 && i <= 3) {\r\n                    return addTrack(tempTracks, i);\r\n                } else if (numPref === 3 || numPref === 4) {\r\n                    if (i === 4) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 5) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 5 && i <= 8) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i === 9) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 10) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 10 && i <= 13) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i > 13 && i <= (13 + (numPref - 2))) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                } else {\r\n                    if (i === 4) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 4 && i <= 7) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i === 8) {\r\n                        return addPref(randomPref, i);\r\n                    } else if (i === 9) {\r\n                        return addBattle(tempBattles, i);\r\n                    } else if (i > 9 && i <= 12) {\r\n                        return addTrack(tempTracks, i);\r\n                    } else if (i === 13) {\r\n                        return addPref(randomPref, i);\r\n                    } else {\r\n                        setSwitchTracks(tempTracks);\r\n                        return addBattle(tempBattles, i);\r\n                    }\r\n                }\r\n            };\r\n            return null;\r\n        }));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!endGame && <GameHelps saveToLocalStorage={saveToLocalStorage} arrayRiavviaSwitch={arrayRiavviaSwitch} setArrayRiavviaSwitch={setArrayRiavviaSwitch} names={players.map((pl) => pl.name)} numGioc={numGioc} tipo={tipo} switchTracks={switchTracks} setSwitchTracks={setSwitchTracks} myTournament={myTournament} setMyTournament={setMyTournament} currentGameId={currentGameId}></GameHelps>}\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-12 col-md-6 p-0\">\r\n                    {myTournament && (\r\n                        <div ref={playlistRef} className=\"playlist\">\r\n                            <div className=\"row m-0\">\r\n                                <div className=\"col-12\">\r\n                                    <table className=\"table table-sm table-dark\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">#</th>\r\n                                                <th scope=\"col\">Nome</th>\r\n                                                <th scope=\"col\">Tipo</th>\r\n                                                <th scope=\"col\">Punti</th>\r\n                                                <th scope=\"col\"><FontAwesomeIcon icon={faHistory} /></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {myTournament.map((el, i) =>\r\n                                                <tr className={el.type + \" \" + el.state + ((currentGameId === i) ? ' current' : (((currentGameId - 1) === i) ? ' prev-current' : ''))} key={'tm-' + el.index}>\r\n                                                    <th className=\"align-middle\" scope=\"row\">{el.index}</th>\r\n                                                    <td className=\"align-middle\">{el.name/*+\" (\" + el.num + \")\"*/}</td>\r\n                                                    <td className=\"align-middle\">{((el.type === 'battle') ? 'BATTAGLIA' : ((el.type === 'favorite') ? 'PREFERITA' : 'GARA'))}</td>\r\n                                                    <td className=\"align-middle\">{(el.points[0]) && <p className=\"mb-0\">{players.map((p, indp) => \" \" + p.name.slice(0, 3) + \" \" + el.points[indp])}</p>}</td>\r\n                                                    <td className=\"align-middle\">{(el.points[0] && !endGame) && <FontAwesomeIcon className=\"my-icon\" onClick={() => { modificaPunteggi(i) }} icon={faPencilAlt} />}</td>\r\n                                                </tr>)}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"col-12 col-md-6 mt-2\">\r\n                    <PointsManager openModalTempoPoints={openModalTempoPoints} end={end} players={players} setPlayers={setPlayers} myTournament={myTournament} setMyTournament={setMyTournament} currentGameId={currentGameId} setCurrentGameId={setCurrentGameId} endGame={endGame} setEndGame={setEndGame}></PointsManager>\r\n                    <button onClick={goToHome} type=\"button\" className=\"btn btn-secondary w-100 mt-5 mb-3\">Nuovo torneo</button>\r\n                    <button onClick={saveInFile} type=\"button\" className=\"btn btn-secondary w-100 mb-3\">Salva torneo</button>\r\n                </div>\r\n            </div>\r\n            <MyModal clicksModal={clicksModal} text={textModal} title={((end === currentGameId) ? \"Punteggi finali\" : \"Punteggi parziali\")}></MyModal>\r\n            <MyModal2 title=\"Modifica Punti\" myTournament={myTournament ? myTournament : []} setMyTournament={setMyTournament} pointsChangeId={pointsChangeId} players={players} setPlayers={setPlayers} clicksModal2={clicksModal2}></MyModal2>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\nimport InitForm from './Components/InitForm';\nimport InitForm2 from './Components/InitForm2';\nimport MyTournament from './Components/MyTournament';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport nitroFueled from './nitrofueled.json';\nimport smoothscroll from 'smoothscroll-polyfill';\n\n\nfunction App({readFile, writeFile}) {\n  const [initForm, setInitForm] = useState(true);\n  const [initForm2, setInitForm2] = useState(true);\n  const [tournamentName, setTournamentName] = useState(\"\");\n  const [load, setLoad] = useState(false);\n  const [numGioc, setNumGioc] = useState(-1);\n  const [tipo, setTipo] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [audio, setAudio] = useState(false);\n\n  const goToHome = () => {\n        setLoad(false);\n        setInitForm(true);\n        setInitForm2(true);\n        setAudio(false);\n  }\n  \n  // kick off the polyfill!\n  smoothscroll.polyfill();\n\n  return (\n    <>\n      <div id=\"divModale\" />\n      <div className=\"container\">\n        {audio && <audio src=\"./audio/theme.mp3\" autoPlay loop/>}\n        {<button onClick={() => setAudio((prevAudio) => !prevAudio)} className={\"btn btn-sm \" + (audio ? \"btn-danger my-btn-audio-off\" : \"btn-success my-btn-audio-on\")}>{audio ? \"Audio OFF\" : \"Audio ON\"}</button>}\n        {(tournamentName !== \"\") && <span className=\"ml-2\">{tournamentName}</span>}\n        {initForm && (\n          <InitForm readFile={readFile} setLoad={setLoad} setTournamentName={setTournamentName} setNumGioc={setNumGioc} setTipo={setTipo} setInitForm={setInitForm} setInitForm2={setInitForm2} setAudio={setAudio}></InitForm>\n        )}\n        {(!initForm && initForm2) && (\n          <InitForm2 tracks={nitroFueled.tracks} numGioc={numGioc} setPlayers={setPlayers} setInitForm2={setInitForm2}></InitForm2>\n        )}\n        {!initForm2 && (\n          <>\n            <MyTournament writeFile={writeFile} goToHome={goToHome} setAudio={setAudio} setInitForm={setInitForm} setInitForm2={setInitForm2} setTournamentName={setTournamentName} setNumGioc={setNumGioc} setTipo={setTipo} tournamentName={tournamentName} load={load} tipo={tipo} numGioc={numGioc} battles={nitroFueled.battles} tracks={nitroFueled.tracks} setPlayers={setPlayers} players={players}></MyTournament>\n          </>\n        )}\n      </div >\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nconst onBackKeyDown = (e) => {\r\n  if (window.confirm('Sicuro di voler uscire dal torneo?')) {\r\n    navigator.app.exitApp();\r\n  } else {\r\n    e.preventDefault();\r\n  }\r\n};\r\n\r\nconst readFile = (nomeFile, setRet) => {\r\n  var type = window.TEMPORARY;\r\n  var size = 5*1024*1024;\r\n  var ret = null;\r\n\r\n  window.requestFileSystem(type, size, successCallback, errorCallback)\r\n\r\n  function successCallback(fs) {\r\n     fs.root.getFile(nomeFile+'.txt', {}, function(fileEntry) {\r\n\r\n        fileEntry.file(function(file) {\r\n           var reader = new FileReader();\r\n\r\n           reader.onloadend = function(e) {\r\n             setRet(this.result);\r\n           };\r\n           reader.readAsText(file);\r\n\r\n        }, errorCallback);\r\n     }, errorCallback);\r\n  }\r\n\r\n  function errorCallback(error) {\r\n    setRet(\"ERRORE\");\r\n  }\r\n}\r\n\r\nconst writeFile = (blob, nomeFile) => {\r\n  var type = window.TEMPORARY;\r\n  var size = 5*1024*1024;\r\n  window.requestFileSystem(type, size, successCallback, errorCallback)\r\n\r\n  function successCallback(fs) {\r\n     fs.root.getFile(nomeFile+'.txt', {create: true}, function(fileEntry) {\r\n\r\n        fileEntry.createWriter(function(fileWriter) {\r\n           fileWriter.onwriteend = function(e) {\r\n              alert('Torneo salvato.');\r\n           };\r\n\r\n           fileWriter.onerror = function(e) {\r\n              alert('Errore durante il salvataggio: ' + e.toString());\r\n           };\r\n           fileWriter.write(blob);\r\n        }, errorCallback);\r\n     }, errorCallback);\r\n  }\r\n\r\n  function errorCallback(error) {\r\n     alert(\"ERRORE: \" + error.code)\r\n  }\r\n}\r\n\r\nconst renderReactDom = () => {\r\n  ReactDOM.render(<App readFile={readFile} writeFile={writeFile} />, document.getElementById('root'));\r\n};\r\n\r\n\r\nif (window.cordova) {\r\n  console.log(navigator)\r\n  document.addEventListener('deviceready', () => {\r\n    document.addEventListener(\"backbutton\", onBackKeyDown, false);\r\n    /*writeFile( new Blob([\"ciao\"],\r\n    { type: \"text/plain;charset=utf-8\" }),\"nuovotorneo\");*/\r\n    /*window.cordova.plugins.backgroundMode.enable();*/\r\n    renderReactDom();\r\n  }, false);\r\n} else {\r\n  renderReactDom();\r\n}"],"sourceRoot":""}